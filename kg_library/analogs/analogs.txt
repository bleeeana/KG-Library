1. KnowGL: https://huggingface.co/ibm-research/knowgl-large
    Особенности:
    Использует Bart-large для извлечения связей из текста.
    Использует Blink для связывания сущностей с Wikidata.
    Использует датасет Rebel для обучения модели на основе Bart-large.

    Предобработка:
    Токенизация
    Использование Bart-large для извлечения связей и сущностей
    Использование Blink для связывания сущностей с Wikidata
    Фильтрация

    Плюсы:
    Использование wikidata как гарантия точности

    Минусы:
    Не предсказывает новые связи.
    Не использует гнн.
    Фильтрация с помощью wikidata будет отбрасывать новые факты, о которых нет данных в wikidata.

2. IBM Grapher: https://github.com/IBM/Grapher.git
    Особенности:
    Основан на графовых нейронных сетях (GNN), что делает его ближе к классическому knowledge graph embedding подходу.
    Использует BERT-like модели для извлечения сущностей и отношений, но затем строит граф на их основе.
    Поддерживает link prediction, то есть может дополнять граф новыми связями и сущностями.

Предобработка:
    Использует стандартную токенизацию BERT.
    NER (Named Entity Recognition) для выделения сущностей.
    Dependency Parsing для структурирования отношений.
    Graph Neural Networks для обучения представлений узлов и рёбер.

Плюсы:
    Комбинирует преимущества трансформеров и графовых нейросетей.
    Поддерживает link prediction, что позволяет дополнять существующий граф.
    Лучше интерпретирует сложные отношения, чем seq2seq-подходы.

Минусы:
    Высокие требования к ресурсам ввиду использования GNN

3. Relik: https://github.com/SapienzaNLP/relik.git
Особенности:
    Использует T5 для извлечения связей между сущностями.
    Работает не только с извлечением отношений, но и с их сопоставлением (linking) с существующим знанием в графах.
    Не создаёт эмбеддинги для дальнейшего link prediction, в отличие от IBM Grapher.

Предобработка:
    Токенизация через T5 Tokenizer.
    NER-аннотирование с выделением сущностей перед передачей в модель.
    Фильтрация некорректных связей путём постобработки предсказаний.

Плюсы:
    Хорошо работает с существующими графами знаний, так как включает linking.
    Использует мощь T5, который подходит для генерации текстовых отношений.
    Может работать с разными источниками данных (wikidata, DBpedia).

Минусы:
    Не подходит для чистой генерации графа с нуля, в отличие от IBM Grapher.
    Отсутствует генерация эмбеддингов, что делает невозможным link prediction.